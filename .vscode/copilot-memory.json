{
    "entities": [
        {
            "name": "AskHole-App",
            "entityType": "Project",
            "observations": [
                "A full-stack application for asking questions and getting answers using various AI models"
            ]
        },
        {
            "name": "backend",
            "entityType": "Service",
            "observations": [
                "Handles API requests, database interactions, file conversions, and AI model integrations"
            ]
        },
        {
            "name": "frontend",
            "entityType": "Service",
            "observations": [
                "User interface for interacting with the AskHole-App."
            ]
        },
        {
            "name": "migrate_database.py",
            "entityType": "File",
            "observations": [
                "Python script for database migrations."
            ]
        },
        {
            "name": "requirements.txt",
            "entityType": "File",
            "observations": [
                "Lists Python dependencies for the backend."
            ]
        },
        {
            "name": "backend/src",
            "entityType": "Directory",
            "observations": [
                "Contains the core Python source code for the backend."
            ]
        },
        {
            "name": "backend/src/custom_client.py",
            "entityType": "File",
            "observations": [
                "Handles custom API client interactions."
            ]
        },
        {
            "name": "backend/src/database.py",
            "entityType": "File",
            "observations": [
                "Manages database connections and operations."
            ]
        },
        {
            "name": "backend/src/file_converter.py",
            "entityType": "File",
            "observations": [
                "Provides utilities for converting various file types (e.g., PDF to text)."
            ]
        },
        {
            "name": "backend/src/gemini_client.py",
            "entityType": "File",
            "observations": [
                "Client for interacting with the Google Gemini API."
            ]
        },
        {
            "name": "backend/src/main.py",
            "entityType": "File",
            "observations": [
                "Main entry point for the backend Flask application."
            ]
        },
        {
            "name": "backend/src/exa_client.py",
            "entityType": "File",
            "observations": [
                "Client for interacting with the Exa API service for document search and retrieval."
            ]
        },
        {
            "name": "backend/src/openrouter_client.py",
            "entityType": "File",
            "observations": [
                "Client for interacting with the OpenRouter API."
            ]
        },
        {
            "name": "backend/src/database",
            "entityType": "Directory",
            "observations": [
                "Contains database-related files, including 'app.db'."
            ]
        },
        {
            "name": "backend/src/database/app.db",
            "entityType": "File",
            "observations": [
                "SQLite database file for the application."
            ]
        },
        {
            "name": "backend/src/models",
            "entityType": "Directory",
            "observations": [
                "Contains Python models for chat and user data."
            ]
        },
        {
            "name": "backend/src/models/chat.py",
            "entityType": "File",
            "observations": [
                "Defines the data model for chat messages and conversations."
            ]
        },
        {
            "name": "backend/src/models/user.py",
            "entityType": "File",
            "observations": [
                "Defines the data model for user accounts and profiles."
            ]
        },
        {
            "name": "backend/src/routes",
            "entityType": "Directory",
            "observations": [
                "Contains Python route definitions for admin, auth, chat, and user APIs."
            ]
        },
        {
            "name": "backend/src/routes/admin.py",
            "entityType": "File",
            "observations": [
                "Defines API routes and logic for administrative functionalities."
            ]
        },
        {
            "name": "backend/src/routes/auth.py",
            "entityType": "File",
            "observations": [
                "Defines API routes and logic for user authentication (login, registration, etc.)."
            ]
        },
        {
            "name": "backend/src/routes/chat.py",
            "entityType": "File",
            "observations": [
                "Defines API routes and logic for chat-related operations."
            ]
        },
        {
            "name": "backend/src/routes/user.py",
            "entityType": "File",
            "observations": [
                "Defines API routes and logic for user profile management."
            ]
        },
        {
            "name": "backend/src/static",
            "entityType": "Directory",
            "observations": [
                "Contains static files like 'favicon.ico' and 'index.html'."
            ]
        },
        {
            "name": "backend/src/static/favicon.ico",
            "entityType": "File",
            "observations": [
                "Favicon for the web application."
            ]
        },
        {
            "name": "backend/src/static/index.html",
            "entityType": "File",
            "observations": [
                "Main HTML file for the backend's static content (potentially serving the frontend)."
            ]
        },
        {
            "name": "backend/src/uploads",
            "entityType": "Directory",
            "observations": [
                "Stores uploaded files, primarily PDFs and HTML."
            ]
        },
        {
            "name": "frontend/src",
            "entityType": "Directory",
            "observations": [
                "Contains the core source code for the frontend, including React components and assets."
            ]
        },
        {
            "name": "frontend/src/App.css",
            "entityType": "File",
            "observations": [
                "Main CSS file for the React application."
            ]
        },
        {
            "name": "frontend/src/App.jsx",
            "entityType": "File",
            "observations": [
                "Root React component of the application."
            ]
        },
        {
            "name": "frontend/src/i18n.js",
            "entityType": "File",
            "observations": [
                "Internationalization (i18n) configuration and utilities."
            ]
        },
        {
            "name": "frontend/src/index.css",
            "entityType": "File",
            "observations": [
                "Global CSS styles for the frontend."
            ]
        },
        {
            "name": "frontend/src/main.jsx",
            "entityType": "File",
            "observations": [
                "Entry point for the React frontend application, renders the App component."
            ]
        },
        {
            "name": "frontend/src/assets",
            "entityType": "Directory",
            "observations": [
                "Contains static assets like images (e.g., 'react.svg')."
            ]
        },
        {
            "name": "frontend/src/assets/react.svg",
            "entityType": "File",
            "observations": [
                "React logo SVG asset."
            ]
        },
        {
            "name": "frontend/src/components",
            "entityType": "Directory",
            "observations": [
                "Houses reusable React components (e.g., AddModelDialog, AddProviderDialog, AdminDashboard)."
            ]
        },
        {
            "name": "frontend/src/hooks",
            "entityType": "Directory",
            "observations": [
                "Contains custom React hooks for shared logic."
            ]
        },
        {
            "name": "frontend/src/lib",
            "entityType": "Directory",
            "observations": [
                "Contains utility functions and helper modules."
            ]
        },
        {
            "name": "frontend/src/lib/utils.js",
            "entityType": "File",
            "observations": [
                "General utility functions for the frontend."
            ]
        },
        {
            "name": "frontend/src/locales",
            "entityType": "Directory",
            "observations": [
                "Stores localization files for different languages."
            ]
        },
        {
            "name": "frontend/src/services",
            "entityType": "Directory",
            "observations": [
                "Contains frontend services, likely for API interactions."
            ]
        },
        {
            "name": "frontend/public",
            "entityType": "Directory",
            "observations": [
                "Contains public assets for the frontend, such as favicons and manifest files."
            ]
        }
    ],
    "relations": [
        {
            "from": "AskHole-App",
            "to": "backend",
            "relationType": "CONTAINS"
        },
        {
            "from": "AskHole-App",
            "to": "frontend",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend",
            "to": "migrate_database.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend",
            "to": "requirements.txt",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend",
            "to": "backend/src",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/custom_client.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/database.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/file_converter.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/gemini_client.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/main.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/openrouter_client.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/database",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/database",
            "to": "backend/src/database/app.db",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/models",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/models",
            "to": "backend/src/models/chat.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/models",
            "to": "backend/src/models/user.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/routes",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/routes",
            "to": "backend/src/routes/admin.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/routes",
            "to": "backend/src/routes/auth.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/routes",
            "to": "backend/src/routes/chat.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/routes",
            "to": "backend/src/routes/user.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/static",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/static",
            "to": "backend/src/static/favicon.ico",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/static",
            "to": "backend/src/static/index.html",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/uploads",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend",
            "to": "frontend/src",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/App.css",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/App.jsx",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/i18n.js",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/index.css",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/main.jsx",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/assets",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src/assets",
            "to": "frontend/src/assets/react.svg",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/components",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/hooks",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/lib",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src/lib",
            "to": "frontend/src/lib/utils.js",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/locales",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend/src",
            "to": "frontend/src/services",
            "relationType": "CONTAINS"
        },
        {
            "from": "frontend",
            "to": "frontend/public",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src",
            "to": "backend/src/exa_client.py",
            "relationType": "CONTAINS"
        },
        {
            "from": "backend/src/routes/chat.py",
            "to": "backend/src/exa_client.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/main.py",
            "to": "backend/src/database.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/main.py",
            "to": "backend/src/routes",
            "relationType": "IMPORTS_FROM"
        },
        {
            "from": "backend/src/routes/chat.py",
            "to": "backend/src/models/chat.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/routes/user.py",
            "to": "backend/src/models/user.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/routes/chat.py",
            "to": "backend/src/gemini_client.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/routes/chat.py",
            "to": "backend/src/openrouter_client.py",
            "relationType": "USES"
        },
        {
            "from": "backend/src/routes/chat.py",
            "to": "backend/src/custom_client.py",
            "relationType": "USES"
        },
        {
            "from": "frontend/src/main.jsx",
            "to": "frontend/src/App.jsx",
            "relationType": "RENDERS"
        },
        {
            "from": "frontend/src/App.jsx",
            "to": "frontend/src/components",
            "relationType": "IMPORTS_FROM"
        },
        {
            "from": "frontend/src/App.jsx",
            "to": "frontend/src/hooks",
            "relationType": "IMPORTS_FROM"
        },
        {
            "from": "frontend/src/App.jsx",
            "to": "frontend/src/lib/utils.js",
            "relationType": "USES"
        },
        {
            "from": "frontend/src/App.jsx",
            "to": "frontend/src/services",
            "relationType": "IMPORTS_FROM"
        }
    ]
}