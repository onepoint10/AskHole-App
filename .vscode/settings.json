{
    // =================================================================
    // 1. КОНФИГУРАЦИЯ MCP СЕРВЕРОВ (Model Context Protocol)
    // =================================================================
    "github.copilot.advanced.mcp.servers": [
        // 1.1. Memory MCP Server (Для долговременной памяти Copilot)
        {
            "id": "project-memory",
            "type": "memory",
            "metadata": {
                // Путь к файлу, где будет храниться память.
                // Рекомендуется использовать .vscode/ (скрытая папка)
                "persistTo": "./.vscode/copilot-memory.json"
            }
        },
        // 1.2. Sequential Thinking MCP Server (Для расширенного планирования задач)
        {
            "id": "sequential-planner",
            "type": "sequential-thinking"
        },
        // 1.3. Playwright MCP Server (Для взаимодействия с веб-страницами)
        {
            "id": "web-access",
            "type": "playwright"
        }
        // GitHub MCP Server (базовый) не требуется, он подключен по умолчанию.
    ],

    // =================================================================
    // 2. НАСТРОЙКИ GITHUB COPILOT CHAT (для продуктивности)
    // =================================================================
    // Указывает Copilot Chat использовать MCP-серверы по умолчанию
    "github.copilot.chat.useMcp": true,
    
    // Включает возможность видеть шаги планирования (если используется Sequential Thinking)
    "github.copilot.chat.debugMode": true, 

    // Расширенные настройки для автодополнения (по желанию)
    "github.copilot.inlineSuggest.enable": {
        "*": true, // Включить для всех языков
        "markdown": false, // Отключить для markdown (чтобы не мешать письму)
        "json": false // Отключить для JSON
    },

    // =================================================================
    // 3. ОБЩИЕ НАСТРОЙКИ VS CODE (для чистоты и удобства)
    // =================================================================
    // Автоматическое форматирование при сохранении
    "editor.formatOnSave": true,
    
    // Включение подсветки отступов для лучшей читаемости
    "editor.guides.indentation": true,

    // Удаление конечных пробелов при сохранении
    "files.trimTrailingWhitespace": true,

    // Рекомендуемые расширения для проекта (если это settings.json в .vscode)
    "extensions.recommendations": [
        "github.copilot"
        // ... другие расширения ...
    ],
    "python.testing.pytestArgs": [
        "backend"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true
}